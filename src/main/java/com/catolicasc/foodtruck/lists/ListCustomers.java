/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.catolicasc.foodtruck.lists;

import com.catolicasc.foodtruck.change.AddEditCustomers;
import com.catolicasc.foodtruck.change.AddEditProducts;
import com.catolicasc.foodtruck.models.Customers;
import com.catolicasc.foodtruck.repositories.CustomersRepository;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author brandon.kluck
 */
public class ListCustomers extends javax.swing.JInternalFrame {

    private CustomersRepository customersRepository = new CustomersRepository();
    
    /**
     * Creates new form ListCustomers
     */
    public ListCustomers() {
        initComponents();
    }

    public void refreshCustomersList() {
        DefaultTableModel tableModel = (DefaultTableModel) jtCustomers.getModel();
        tableModel.setRowCount(0);
        
        ArrayList<Customers> customers = customersRepository.getAllProducts();
        
        for(Customers customer : customers) {
            tableModel.addRow(new Object[] { 
                customer.getId(),
                customer.getName(),
                customer.getEmail(),
                customer.getAddress()
            });
        }
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtCustomers = new javax.swing.JTable();
        jbRefresh = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();
        jbUpdate = new javax.swing.JButton();
        jbAdd = new javax.swing.JButton();

        jtCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "E-mail", "Endereço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCustomers.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtCustomers);

        jbRefresh.setText("Atualizar");

        jbDelete.setText("Apagar");

        jbUpdate.setText("Alterar");

        jbAdd.setText("Adicionar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(305, Short.MAX_VALUE)
                .addComponent(jbDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbRefresh)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(367, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbRefresh)
                    .addComponent(jbAdd)
                    .addComponent(jbUpdate)
                    .addComponent(jbDelete))
                .addGap(21, 21, 21))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(55, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAddActionPerformed(java.awt.event.ActionEvent evt) {                                      
        AddEditProducts addEditProducts = new AddEditProducts();
        this.getParent().add(addEditProducts);
        addEditProducts.setVisible(true);
    }                                     

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
        refreshCustomersList();
    }                                        

    private void jbRefreshActionPerformed(java.awt.event.ActionEvent evt) {                                          
        refreshCustomersList();
    }                                         

    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
        if(jtCustomers.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um cliente");
            return;
        }
        
        Integer rowIndex = jtCustomers.getSelectedRow();
        Integer customersId = (Integer) jtCustomers.getModel().getValueAt(rowIndex, 0);
        
        Customers customers = customersRepository.getCustomersById(customersId);
        
        AddEditCustomers addEditCustomers = new AddEditCustomers();
        addEditCustomers.setCustomers(customers);
        this.getParent().add(addEditCustomers);
        addEditCustomers.setVisible(true);
    }      

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbRefresh;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JTable jtCustomers;
    // End of variables declaration//GEN-END:variables
}
